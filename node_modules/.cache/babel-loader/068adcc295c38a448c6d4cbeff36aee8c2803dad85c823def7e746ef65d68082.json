{"ast":null,"code":"var _jsxFileName = \"/Users/ulfah.asmaniah/work/todo-list/src/components/List/index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  id: 0,\n  isComplete: false,\n  description: 'create landing page'\n}];\nfunction List() {\n  _s();\n  const [listData, setListData] = useState(mockData);\n  const [inputTodoValue, setInputTodoValue] = useState('');\n  const onChangeCheckBox = data => {\n    const updatedData = listData.map(item => {\n      if (item.id === data.id) {\n        return {\n          ...item,\n          isComplete: item.isComplete ? false : true\n        };\n      }\n      return item;\n    });\n    setListData(updatedData);\n  };\n  const listItem = () => {\n    return listData.map((data, idx) => {\n      console.log({\n        iscomplete: data.isComplete,\n        idx\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radioContainer\",\n          children: [data.description, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: data.isComplete ? true : false,\n            name: \"radio\",\n            onClick: () => onChangeCheckBox(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  const handleOnChangeInput = e => {\n    const inputValue = e.target.value;\n    setInputTodoValue(inputValue);\n  };\n  const handleAddNewTodo = () => {\n    if (!inputTodoValue) return;\n    const newTodoItem = {\n      id: listData.length + 1,\n      isComplete: false,\n      description: inputTodoValue\n    };\n    const updateTodoList = [...listData, newTodoItem];\n    setListData(updateTodoList);\n    setInputTodoValue('');\n  };\n  const addNewTodo = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addNewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputTodoValue,\n        onChange: e => handleOnChangeInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddNewTodo(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), addNewTodo(), listItem()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"TJUy5ToLSZnFTkJAwcZa/sU9+2Y=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","mockData","id","isComplete","description","List","_s","listData","setListData","inputTodoValue","setInputTodoValue","onChangeCheckBox","data","updatedData","map","item","listItem","idx","console","log","iscomplete","children","className","type","checked","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleOnChangeInput","e","inputValue","target","value","handleAddNewTodo","newTodoItem","length","updateTodoList","addNewTodo","onChange","_c","$RefreshReg$"],"sources":["/Users/ulfah.asmaniah/work/todo-list/src/components/List/index.js"],"sourcesContent":["import { useState } from 'react';\nimport './styles.css';\n\nconst mockData = [{\n    id: 0,\n    isComplete: false,\n    description: 'create landing page',\n}]\n\nfunction List() {\n    const [listData, setListData] = useState(mockData);\n    const [inputTodoValue, setInputTodoValue] = useState('');\n    \n    const onChangeCheckBox = (data) => {\n        const updatedData = listData.map(item => {\n            if (item.id === data.id) {\n                return {\n                    ...item,\n                    isComplete: item.isComplete ? false : true,\n                }\n            }\n\n            return item;\n        });\n\n        setListData(updatedData);\n    }\n\n    const listItem = () => {\n        return listData.map((data, idx) => {\n            console.log({iscomplete: data.isComplete, idx})\n            \n            return (\n                <div key={idx}>\n                    <label className=\"radioContainer\">\n                        {data.description}\n                        <input type=\"checkbox\" checked={data.isComplete ? true : false} name=\"radio\" onClick={() => onChangeCheckBox(data)} />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                </div>\n            )\n        })\n    }\n\n    const handleOnChangeInput = (e) => {\n        const inputValue = e.target.value;\n        setInputTodoValue(inputValue);\n    }\n\n    const handleAddNewTodo = () => {\n        if (!inputTodoValue) return;\n\n        const newTodoItem = {\n            id: listData.length + 1,\n            isComplete: false,\n            description: inputTodoValue,\n        };\n\n        const updateTodoList = [...listData, newTodoItem];\n\n        setListData(updateTodoList);\n        setInputTodoValue('');\n    }\n\n    const addNewTodo = () => {\n        return (\n            <div className=\"addNewContainer\">\n                <input type=\"text\" value={inputTodoValue} onChange={e => handleOnChangeInput(e)} />\n                <button onClick={() => handleAddNewTodo()}>Add</button>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>To-do list</h1>\n            {addNewTodo()}\n            {listItem()}\n        </div>\n    )\n}\n\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}