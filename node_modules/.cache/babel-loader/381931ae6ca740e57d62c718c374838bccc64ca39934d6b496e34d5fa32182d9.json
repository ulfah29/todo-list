{"ast":null,"code":"var _jsxFileName = \"/Users/ulfah.asmaniah/work/todo-list/src/components/List/index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  id: 1,\n  status: 0,\n  /* status: 0: not done; 1: done */\n  description: 'create landing page'\n}];\nfunction List() {\n  _s();\n  const [listData, setListData] = useState(mockData);\n  const onChangeCheckBox = data => {\n    const updatedData = listData.map(item => {\n      if (item.id === data.id) {\n        return {\n          id: item.id,\n          status: item.status === 0 ? 1 : 0,\n          description: item.description\n        };\n      }\n\n      // return item;\n    });\n    console.log('updatedData', updatedData);\n\n    // setListData(updatedData);\n  };\n  console.log('listData', listData);\n  const listItem = () => {\n    return listData.map((data, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radioContainer\",\n          onClick: () => onChangeCheckBox(data),\n          children: [data.description, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: data.status === 1,\n            name: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), listItem()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"LTeaZNOuVfHAuPFxJsijwc4hTps=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","mockData","id","status","description","List","_s","listData","setListData","onChangeCheckBox","data","updatedData","map","item","console","log","listItem","idx","children","className","onClick","type","checked","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ulfah.asmaniah/work/todo-list/src/components/List/index.js"],"sourcesContent":["import { useState } from 'react';\nimport './styles.css';\n\nconst mockData = [{\n    id: 1,\n    status: 0, /* status: 0: not done; 1: done */\n    description: 'create landing page',\n}]\n\nfunction List() {\n    const [listData, setListData] = useState(mockData);\n    \n    const onChangeCheckBox = (data) => {\n        const updatedData = listData.map(item => {\n            if (item.id === data.id) {\n                return {\n                    id: item.id,\n                    status: item.status === 0 ? 1 : 0,\n                    description: item.description,\n                }\n            }\n\n            // return item;\n        });\n\n        console.log('updatedData', updatedData)\n\n        // setListData(updatedData);\n    }\n\n    console.log('listData', listData)\n\n    const listItem = () => {\n        return listData.map((data, idx) => {\n            return (\n                <div key={idx}>\n                    <label className=\"radioContainer\" onClick={() => onChangeCheckBox(data)}>\n                        {data.description}\n                        <input type=\"radio\" checked={data.status === 1} name=\"radio\" />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>To-do list</h1>\n            {listItem()}\n        </div>\n    )\n}\n\nexport default List;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAG,CAAC;EACdC,EAAE,EAAE,CAAC;EACLC,MAAM,EAAE,CAAC;EAAE;EACXC,WAAW,EAAE;AACjB,CAAC,CAAC;AAEF,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACG,QAAQ,CAAC;EAElD,MAAMQ,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,GAAG,CAACC,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACX,EAAE,KAAKQ,IAAI,CAACR,EAAE,EAAE;QACrB,OAAO;UACHA,EAAE,EAAEW,IAAI,CAACX,EAAE;UACXC,MAAM,EAAEU,IAAI,CAACV,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;UACjCC,WAAW,EAAES,IAAI,CAACT;QACtB,CAAC;MACL;;MAEA;IACJ,CAAC,CAAC;IAEFU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,WAAW,CAAC;;IAEvC;EACJ,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAER,QAAQ,CAAC;EAEjC,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACnB,OAAOT,QAAQ,CAACK,GAAG,CAAC,CAACF,IAAI,EAAEO,GAAG,KAAK;MAC/B,oBACIjB,OAAA;QAAAkB,QAAA,eACIlB,OAAA;UAAOmB,SAAS,EAAC,gBAAgB;UAACC,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACC,IAAI,CAAE;UAAAQ,QAAA,GACnER,IAAI,CAACN,WAAW,eACjBJ,OAAA;YAAOqB,IAAI,EAAC,OAAO;YAACC,OAAO,EAAEZ,IAAI,CAACP,MAAM,KAAK,CAAE;YAACoB,IAAI,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/D3B,OAAA;YAAMmB,SAAS,EAAC;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC,GALFV,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CAAC;IAEd,CAAC,CAAC;EACN,CAAC;EAED,oBACI3B,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAD,QAAA,gBACtBlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBX,QAAQ,CAAC,CAAC;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACrB,EAAA,CA3CQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA6Cb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}